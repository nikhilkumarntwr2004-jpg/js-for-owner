#include <stdio.h> #include <stdlib.h>

#define MAXSIZE 5

void insert(); void delete(); void display();

int queue[MAXSIZE], front = -1, rear = -1;

int main() { int choice = 0; while(choice != 4) { printf("\nMain Menu\n"); printf("1. Insert an element\n"); printf("2. Delete an element\n"); printf("3. Display the queue\n"); printf("4. Exit\n"); printf("Enter your choice: "); scanf("%d", &choice);

    switch(choice) {
        case 1:
            insert();
            break;
        case 2:
            delete();
            break;
        case 3:
            display();
            break;
        case 4:
            exit(0);
        default:
            printf("\n*Enter a valid choice!*\n");
    }
}
return 0;

}

void insert() { int item; printf("\nEnter the element: "); scanf("%d", &item);

if(rear == MAXSIZE - 1) {
    printf("\nOVERFLOW (Queue is full)\n");
    return;
}
if(front == -1 && rear == -1) {
    front = rear = 0;
} else {
    rear++;
}
queue[rear] = item;
printf("\nInserted -> %d\n", item);

}

void delete() { if(front == -1 || front > rear) { printf("\nUNDERFLOW (Queue is empty)\n"); front = rear = -1; // reset return; } printf("\nDeleted -> %d\n", queue[front]); front++; if(front > rear) { front = rear = -1; // reset when queue becomes empty } }

void display() { if(front == -1) { printf("\nQueue is empty\n"); return; } printf("\nQueue elements: "); for(int i = front; i <= rear; i++) { printf("%d ", queue[i]); } printf("\n"); }
